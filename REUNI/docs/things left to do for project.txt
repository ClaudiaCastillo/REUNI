

The items left are pretty massive: 

1.  Produce mysql DB schema and tables, tweek schema.sql script if it needs it.

2.  Produce seed data (seed.sql) for the Students table, and load it into the SQL DB and 

3.  Review the data the DB to make sure it looks good.
 
	Kavodel, can you please update the time stamp in the SQL SCHEMA to post the CURRENT TIMESTAMP when there is an UPDATE to the table.
	the timestamp needs to be updated upon an UPDATE on the record so that we know exactly when the student status is modified.
	    `ts_update` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP


4.  Update the main SERVER.JS script to incorporate PUG, where ever there is mention of handlebars (which will mean learning how to incorporate PUG). 


5.  Create a TEST directory and create some TEST scripts


-------------------------------------------------------------------------------------
6.  Update the reunify_controller.js script (i.e. routes) for all the route logic:
-------------------------------------------------------------------------------------

   a.  route/student (from CHECK-IN window, STUDENT selection - student check-in window)

       The student will check in with their student ID entry in the window, 
	  i. the route logic will SELECT the student from the students DB table where student ID matches the value that is entered
	 ii. the route logic will return the student object back to the DOM to display the student name and photo for visual verification
	iii. the route logic will (when the submit button is hit on the DOM), UPDATE the row in the students DB table with new field values:
		reunify_pnt - the reunification point or location (i.e. room number, group color, etc.)
		student_status - the status of "RECEIVED" or "CHECKED_IN" or "TRANSFERRED MEDICAL UNIT"
		the current date time stamp should be placed in the table upon POST or UPDATE.

	NOTE: the reunify point will require logic to count the number of students assigned to that point, and once there are 100 students assigned 
        to that point, then assign the next group of 100 students to a new point. 
	For example, assign first 100 students to ROOM 101 and then assign the next set of 100 students to ROOM 201, and then assign the next set 
        of 100 students to ROOM 301....etc.

	NOTE: Additionally, require some route logic to assign a few students a student_status of "TRANSFERRED MEDICAL UNIT", so that when the student list
	window is retrieved, then it will show a few studnets who have been transferred to medical.


    b.  route/parent (from CHECK-IN window, PARENT selection - parent check-in window)

	The parent will check in with their parent government ID entry in the window, 
	   i. the route logic will SELECT * students where the parent ID matches the value entered. 
	  ii. the route logic will return the students object back to the DOM to display the parent name, address, city, state, zip fields for visual verification
	 iii. the route logic will return the students object back to the DOM to display a list of students associated with that parent, -- or however Derek needs this done.
	iiii. the route logic will (when the submit button is hit on the DOM), POST a row in the checkin_par DB table with the field values:
		par_govt_id - the parents government ID number (i.e. driver's liscense, etc.) from the students table
		par_name - the parents name from the students table
		the current date time stamp should be placed in the table upon POST.

    c.  route/admin_parent (from ADMIN window, PARENT selection - parents who have checked in window)

	The admin parent window will display a list of parents whom have already checked in via the parent check-in DOM.
	This will be a SELECT * from the checkin_par DB table ordered by timestamp.
	This parent list object will be sent back to the DOM to display the list on the DOM window.

	-------------------------
	List of Parents checked-in	
	-------------------------
	Robert Palmer
	Daniel Stellar
	  :		  
	  :		  


    d.  route/admin_student (from ADMIN window, STUDENT selection - students who have checked in window)

	The admin student window will display a list of students whom have already checked in via the studnet check-in DOM.
	This will be a SELECT * from the checkin_par DB table ordered by reunify_pnt, student_status and timestamp. 
	This should get the student list in proper order for display on the DOM.
	Or we could send seperate lists back to the DOM for each group -- whatever is easiest for Derek???

	This student list object will be sent back to the DOM to be displayed in groups (i.e. lists) of students by reunify_pnt, for example:

	------------	-------------
	Red Group	Blue Group
	------------	-------------
	Mary		Jane
	Billy		Bobby
	  :		  :
	  :		  :

	------------	-------------
	Orange Group	Medical Transer
	------------	-------------
	Mary		Jane
	Billy		Bobby
	  :		  :
	  :		  :


    e.  route/admin_reunification (from ADMIN window, Reunification selection - students who have checked in matchec with parents who have check in window)
	The admin reunification window will display a list of students and parents whom have already checked in and are waiting reunification.
	This will be a inner join of all students in student DB to parents checked in via the checkin_par DB table, ordered by parent check in timestamp.
	For example: Select student_name, par_name from "table A" join "table B" On "table A" field column = "table B" field column where ..... 
	The join will be via the parent government ID, to obtain all students belonging to this parent which has checked in and been posted to the parent DB.

	Order by timestamp on the Parent check-in table to get the list in proper order for display on the DOM.

	------------	-------------
	Student		Parent
	------------	-------------
	Mary		Robert Palmer	[X]
	Billy		Robert Palmer	[ ]
	  :		  :
	  :		  :

	Additionally, on the Dom will be a select box to select the parents and child matches that will be reunited.
	
	The route logic will (when the submit button is hit on the DOM), POST a row in the release students (release_std) DB table with the field values:
		student_id - the student id from the student table.
		par_govt_id - the parents government ID number (i.e. driver's liscense, etc.) from the parent check-in table
		the current date time stamp should be placed in the table upon POST.

